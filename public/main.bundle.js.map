{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/DAL/batch.service.ts","./src/app/DAL/course.service.ts","./src/app/DAL/student.service.ts","./src/app/DAL/subject.service.ts","./src/app/DAL/teacher.service.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/batch/batch.component.css","./src/app/batch/batch.component.html","./src/app/batch/batch.component.ts","./src/app/course/course.component.css","./src/app/course/course.component.html","./src/app/course/course.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/lecture/lecture.component.css","./src/app/lecture/lecture.component.html","./src/app/lecture/lecture.component.ts","./src/app/student/student.component.css","./src/app/student/student.component.html","./src/app/student/student.component.ts","./src/app/subject/subject.component.css","./src/app/subject/subject.component.html","./src/app/subject/subject.component.ts","./src/app/teacher/teacher.component.css","./src/app/teacher/teacher.component.html","./src/app/teacher/teacher.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\n\nimport { IBatch } from '../batch/batch';\n\n\n@Injectable()\nexport class BatchService {\n    private _batchUrl = './batches';\n    private _batchUrlPost = './courses/'\n\n    constructor(private _http: HttpClient) { }\n\n    getBatches(): Observable<IBatch[]> {\n        return this._http.get<IBatch[]>(this._batchUrl)\n            .do(data => console.log('All: ' + JSON.stringify(data)))\n            .catch(this.handleError);\n    }\n    postBatch(courseId : number,newBatchName : string) : any {\n        return this._http.post(this._batchUrlPost + courseId + \"/batches?name=\" + newBatchName,null)\n    }\n    \n    private handleError(err: HttpErrorResponse) {\n        console.error(err.message);\n        return Observable.throw(err.message);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DAL/batch.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\n\r\nimport { ICourse } from '../course/course';\r\n\r\n\r\n@Injectable()\r\nexport class CourseService {\r\n    private _courseUrl = './courses';\r\n    // private _courseUrl = './testdata/testjson.json';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getCourses(): Observable<ICourse[]> {\r\n        return this._http.get<ICourse[]>(this._courseUrl)\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    postCourse(newCourseName : string) : any {\r\n        return this._http.post(this._courseUrl+\"?name=\"+newCourseName,null)\r\n    }\r\n    getLecturesInBatch(batchId : number){\r\n        return this._http.get<ICourse[]>(this._courseUrl+\"/1/batches/\" + batchId + \"/lectures\")\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.error(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DAL/course.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\n\r\nimport { IStudent } from '../student/student';\r\n\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n    private _studentUrl = './students';\r\n    private _courseUrl = './courses';\r\n    // private _courseUrl = './testdata/testjson.json';\r\n    // this._courseUrl + \"/1/batches/\" + batchId + \"/students\"\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getStudents(): Observable<IStudent[]> {\r\n        return this._http.get<IStudent[]>(this._studentUrl)\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    getBatchStudents(batchId : number) : Observable<IStudent[]>{\r\n        console.log(\"i am here:\" + batchId);\r\n        console.log(\"::::\" + this._courseUrl+ \"/1/batches/\" + batchId + \"/students\");\r\n        return this._http.get<IStudent[]>(this._courseUrl + \"/1/batches/\" + batchId + \"/students\")\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    postStudent(newStudentName : string) : any {\r\n        return this._http.post(this._studentUrl+\"?name=\"+newStudentName,null)\r\n        .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    postStudentBatch(batchId : number, studentId : number){\r\n        return this._http.post(this._studentUrl+ \"/\" +studentId+\"/batches/\"+batchId,null)\r\n        .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    \r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.error(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DAL/student.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\n\r\nimport { ISubject } from '../subject/subject';\r\n\r\n@Injectable()\r\nexport class SubjectService {\r\n    private _subjectUrl = './subjects';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getSubjects(): Observable<ISubject[]> {\r\n        return this._http.get<ISubject[]>(this._subjectUrl)\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    postSubject(newSubjectName : string) : any {\r\n        return this._http.post(this._subjectUrl+\"?name=\"+newSubjectName,null)\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.error(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DAL/subject.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\n\r\nimport { ITeacher } from '../teacher/teacher';\r\n\r\n\r\n@Injectable()\r\nexport class TeacherService {\r\n    private _teacherUrl = './teachers';\r\n\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    getTeachers(): Observable<ITeacher[]> {\r\n        return this._http.get<ITeacher[]>(this._teacherUrl)\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    postTeacher(newTeacherName : string) : any {\r\n        return this._http.post(this._teacherUrl+\"?name=\"+newTeacherName,null)\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        console.error(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/DAL/teacher.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/course']\\\">Courses</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/batch']\\\">Batches</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/student']\\\">Students</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/subject']\\\">Subject</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/teacher\\\">Teacher</a>\\n    </li>\\n  </ul>\\n</nav>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { BatchService } from './DAL/batch.service';\nimport { CourseService } from './DAL/course.service';\nimport { TeacherService } from './DAL/teacher.service';\nimport { SubjectService } from './DAL/subject.service';\nimport { StudentService } from './DAL/student.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [BatchService, CourseService,TeacherService, SubjectService, StudentService ]\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { BatchComponent } from './batch/batch.component';\nimport { LectureComponent } from './lecture/lecture.component';\nimport { CourseComponent } from './course/course.component';\nimport { StudentComponent } from './student/student.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { HomeComponent } from './home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BatchComponent,\n    LectureComponent,\n    CourseComponent,\n    StudentComponent,\n    SubjectComponent,\n    TeacherComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: 'course', component: CourseComponent },\n      { path: 'batch', component: BatchComponent },\n      { path: 'student', component: StudentComponent },\n      { path: 'subject', component: SubjectComponent },\n      { path: 'teacher', component: TeacherComponent },\n      { path: 'home', component: HomeComponent },\n      { path: '', redirectTo: 'home', pathMatch: 'full'},\n      { path: '**', redirectTo: 'home', pathMatch: 'full'}\n  ])\n  ],\n   bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch/batch.component.css\n// module id = ./src/app/batch/batch.component.css\n// module chunks = main","module.exports = \"<p>\\n  batch worksssss!\\n</p>\\n<div class=\\\"container\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let batch of batches\\\">\\n      batch: {{batch.name}}\\n    </li>\\n  </ul>\\n</div>\\n<b>-----------------------------------------------------------</b>\\n<span><b>Add a new Batch</b></span>\\n<div class=\\\"container\\\">\\n  <form>\\n    <div>\\n      <label for=\\\"name\\\">Batch Name</label>\\n      <input name=\\\"name\\\" type=\\\"text\\\" #inp1 class=\\\"form-control\\\">\\n    </div>\\n    <div>\\n      <label>Select Course</label>\\n      <ul class=\\\"form-control\\\">\\n        <li *ngFor=\\\"let course of coursesHere\\\" (click)=\\\"selectCourse(course.id)\\\">\\n          {{course.name}}\\n        </li>\\n        <!-- <option *ngFor=\\\"let course of coursesHere\\\" (click) = \\\"selectCourse(course.id)\\\">\\n          {{course.name}} -->\\n      </ul>\\n    </div>\\n    <button type=\\\"submit\\\" (click)=\\\"onSubmit(inp1.value)\\\" class=\\\"btn btn-default\\\">Submit</button>\\n  </form>\\n</div>\\n<br>\\n\\n<div class=\\\"container\\\">\\n  <button class=\\\"btn btn-warning\\\" (click)=\\\"enableViewStudents()\\\"> View Students In a Particular Batch </button>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"studentBatchView\\\">\\n  <span>Click on Batch to view Students</span>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let batch of batches\\\" (click)=\\\"viewSelectedStudentsInBatch(batch.id)\\\">\\n      batch: {{batch.name}}\\n    </li>\\n  </ul>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"studentView\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let student of studentsInBatch\\\">\\n      <b> Id: {{student.id}} </b>\\n      <p>student: {{student.name}}</p>\\n    </li>\\n  </ul>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <button class=\\\"btn btn-warning\\\" (click)=\\\"enableAddLecture()\\\"> View Lectures In a Batch </button>\\n</div>\\n<br>\\n<div class=\\\"container\\\" *ngIf = \\\"enableLectureAdd\\\">\\n    <span>Click on Batch to view Lectures</span>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let batch of batches\\\" (click)=\\\"viewSelectedLecturesInBatch(batch.id)\\\">\\n        batch: {{batch.name}}\\n      </li>\\n    </ul>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"lectureView\\\">\\n    <span>Click on Batch to view Its Lectures</span>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let lecture of lecturesInBatch\\\">\\n          <b> Id: {{lecture.id}} </b>\\n          <p>lecture: {{lecture.name}}</p>\\n      </li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch/batch.component.html\n// module id = ./src/app/batch/batch.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { BatchService } from '../DAL/batch.service';\nimport { IBatch } from './batch';\nimport { isNullOrUndefined } from 'util';\nimport { ICourse } from '../course/course';\nimport { CourseService } from '../DAL/course.service';\nimport { IStudent } from '../student/student';\nimport { StudentService } from '../DAL/student.service';\nimport { ILecture } from '../lecture/lecture';\n\n@Component({\n  selector: 'app-batch',\n  templateUrl: './batch.component.html',\n  styleUrls: ['./batch.component.css']\n})\nexport class BatchComponent implements OnInit {\n  batches: IBatch[] = [];\n  coursesHere: ICourse[] = [];\n  errorMessage: string\n  courseIdSelected : number = 1;\n  studentBatchView : boolean = false;\n  studentsInBatch : IStudent[] = [];\n  studentView : boolean = false;\n  enableLectureAdd : boolean = false;\n  lecturesInBatch : ILecture[] = [];\n  lectureView : boolean = false;\n\n  constructor(private _batchService: BatchService, private _courseService: CourseService , private _studentService : StudentService) { }\n\n  ngOnInit(): void {\n    console.log(\"i am here\")\n    this._batchService.getBatches()\n      .subscribe(batches => this.batches = batches,\n        error => this.errorMessage = <any>error);\n    this._courseService.getCourses()\n      .subscribe(courses => this.coursesHere = courses,\n        error => this.errorMessage = <any>error);\n  }\n  selectCourse(courseId : number) : void{\n    alert(\"You have selected: \" + courseId)\n    console.log(\"entered is \" + courseId)\n    this.courseIdSelected = courseId;\n  }\n  onSubmit(a: string) {\n    console.log(a + \"  newBatchName \" + this.courseIdSelected);\n\n    if(!isNullOrUndefined(a)){\n      this._batchService.postBatch(this.courseIdSelected,a)\n      .subscribe((data : any) => {\n        console.log(\"data here is : \" + data.success),\n        error => this.errorMessage = <any>error;\n        if(!data.success){\n          this.errorMessage = \"Sorry could not add your item\";\n          throw new Error(\"Sorry could not add your item\");          \n        }\n      })\n    }\n    else{\n      console.log(\"found an error\");\n      throw new Error(\"Cant be empty\");\n    }\n\n  }\n  enableViewStudents(){\n    this.studentBatchView = true;\n    this.lectureView = false;\n    this.enableLectureAdd = false;\n\n  }\n  viewSelectedStudentsInBatch(batchId : number){\n    alert(\"You have selected: \" + batchId)\n    this.studentView = true;\n    this._studentService.getBatchStudents(batchId)\n      .subscribe(students => this.studentsInBatch = students,\n        error => this.errorMessage = <any>error);\n        console.log(\"getBatchStudents: \" + this.studentsInBatch);  \n  }\n  enableAddLecture(){\n    this.studentBatchView = false;\n    this.studentView = false;\n    this.enableLectureAdd = true;\n  }\n  viewSelectedLecturesInBatch(batchId: number){\n    alert(\"You have selected: \" + batchId);\n    this.lectureView = true;\n    this._courseService.getLecturesInBatch(batchId)\n      .subscribe(lecturesInBatch => this.lecturesInBatch = lecturesInBatch,\n        error => this.errorMessage = <any>error);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/batch/batch.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/course/course.component.css\n// module id = ./src/app/course/course.component.css\n// module chunks = main","module.exports = \"<p>\\n  course works!\\n</p>\\n<div class=\\\"container\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let course of courses\\\">\\n      course: {{course.name}}\\n    </li>\\n  </ul>\\n</div>\\n<div class=\\\"container\\\">\\n  <span>Add Course</span>\\n  <form>\\n    <div>\\n      <label for=\\\"name\\\">Course Name</label>\\n      <input name=\\\"name\\\" type=\\\"text\\\" #inp1 class=\\\"form-control\\\">\\n    </div>\\n    <button type=\\\"submit\\\" (click)=\\\"onSubmit(inp1.value)\\\" class=\\\"btn btn-default\\\">Add Course</button>\\n  </form>\\n</div>\\n<br>\\n<button class=\\\"btn btn-warning\\\">\\n  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/batch']\\\">View All Batches</a>\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/course/course.component.html\n// module id = ./src/app/course/course.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ICourse } from './course';\nimport { CourseService } from '../DAL/course.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent implements OnInit {\n\n  courses : ICourse[] = [];\n  errorMessage : string;\n\n  constructor(private _courseService : CourseService) { }\n\n  ngOnInit() : void{\n    console.log(\"i am here\")\n    this._courseService.getCourses()\n      .subscribe(courses => this.courses = courses,\n        error => this.errorMessage = <any>error);\n  }\n  onSubmit(a: string)  {\n    console.log(\"newCourseName \" + a );\n\n    if(!isNullOrUndefined(a)){\n      this._courseService.postCourse(a)\n      .subscribe((data : any) => {\n        console.log(\"data here is : \" + data.success),\n        error => this.errorMessage = <any>error;\n        if(!data.success){\n          this.errorMessage = \"Sorry could not add your item\";\n          throw new Error(\"Sorry could not add your item\");          \n        }\n      })\n    }\n    else{\n      console.log(\"found an error\");\n      throw new Error(\"Cant be empty\");\n    }\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/course/course.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<h1>\\n  home works!\\n</h1>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/lecture/lecture.component.css\n// module id = ./src/app/lecture/lecture.component.css\n// module chunks = main","module.exports = \"<p>\\n  lecture works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/lecture/lecture.component.html\n// module id = ./src/app/lecture/lecture.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lecture',\n  templateUrl: './lecture.component.html',\n  styleUrls: ['./lecture.component.css']\n})\nexport class LectureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/lecture/lecture.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/student/student.component.css\n// module id = ./src/app/student/student.component.css\n// module chunks = main","module.exports = \"<p>\\n  student works! Click Student To know its detail\\n</p>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let student of students\\\" (click)=\\\"viewStudent(student)\\\">\\n    student: {{student.name}}\\n  </li>\\n</ul>\\n<br>\\n\\n<div *ngIf=\\\"viewStudentToggle\\\">\\n  <h5 class=\\\"container\\\">\\n    Details For Student : {{detailStudent.name}}\\n    <br> Student ID : {{detailStudent.id}}\\n    <br> Name : {{detailStudent.name}}\\n    <br> Mobile Number: Not Set\\n    <br> DOB : Not Set\\n    <br>\\n  </h5>\\n  <div class=\\\"container\\\">\\n    <span>Select Batch from List</span>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let enrollBatch of enrollBatchList\\\" (click)=batchSelect(enrollBatch.id)>\\n        Batch: {{enrollBatch.name}}\\n      </li>\\n    </ul>\\n    <br>\\n    <button type=\\\"submit\\\" (click)=\\\"enrollMe()\\\" class=\\\"btn btn-default\\\">\\n      Enroll Student\\n    </button>\\n  </div>\\n</div>\\n\\n<!-- <button (click)=\\\"enrollStudentFunc()\\\">Enroll Student</button>\\n<div *ngIf=\\\"enrollStudent\\\">\\n  <div>\\n    <label for=\\\"name\\\">Type Student ID</label>\\n    <input name=\\\"name\\\" type=\\\"number\\\" #inp1 class=\\\"form-control\\\">\\n  </div>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let enrollBatch of enrollBatchList\\\" (click)=batchSelect(enrollBatch.id)>\\n      Batch: {{enrollBatch.name}}\\n    </li>\\n  </ul>\\n  <button type=\\\"submit\\\" (click)=\\\"enrollMe(inp1.value)\\\" class=\\\"btn btn-default\\\">Submit</button>\\n</div> -->\\n\\n--------------------------------------------------------------------------\\n<form class=\\\"container\\\">\\n  <div>\\n    <label for=\\\"name\\\">Add New student Name</label>\\n    <input name=\\\"name\\\" type=\\\"text\\\" #inp1 class=\\\"form-control\\\">\\n  </div>\\n  <button type=\\\"submit\\\" (click)=\\\"onSubmit(inp1.value)\\\" class=\\\"btn btn-default\\\">Submit</button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/student/student.component.html\n// module id = ./src/app/student/student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { IStudent } from './student';\nimport { StudentService } from '../DAL/student.service';\nimport { isNullOrUndefined } from 'util';\nimport { BatchService } from '../DAL/batch.service';\nimport { IBatch } from '../batch/batch';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  students: IStudent[] = [];\n  errorMessage: string;\n  viewStudentToggle : boolean = false\n  detailStudent : IStudent = null\n  // enrollStudent : boolean = false\n  enrollBatchList : IBatch[] = []\n  batchSelectedId : number = 1;\n\n  constructor(private _studentService: StudentService, private _batchService: BatchService) { }\n\n  ngOnInit(): void {\n    console.log(\"i am here\")\n    this._studentService.getStudents()\n      .subscribe(students => this.students = students,\n        error => this.errorMessage = <any>error);\n  }\n  onSubmit(a: string) {\n    // console.log(\"newCourseName \" + a );\n\n    if (!isNullOrUndefined(a)) {\n      this._studentService.postStudent(a)\n        .subscribe((data: any) => {\n          console.log(\"data here is : \" + data.success),\n            error => this.errorMessage = <any>error;\n          if (!data.success) {\n            this.errorMessage = \"Sorry could not add your item\";\n            throw new Error(\"Sorry could not add your item\");\n          }\n        })\n    }\n    else {\n      console.log(\"found an error\");\n      throw new Error(\"Cant be empty\");\n    }\n  }\n  viewStudent(student : IStudent){\n    alert(\"You have selected: \" + student.name)\n    this.viewStudentToggle = true;\n    this.detailStudent = student;\n    this._batchService.getBatches()\n    .subscribe(batches => this.enrollBatchList = batches,\n      error => this.errorMessage = <any>error);\n  }\n  // enrollStudentFunc(){\n  //   this.enrollStudent = true;\n  //   this._batchService.getBatches()\n  //     .subscribe(batches => this.enrollBatchList = batches,\n  //       error => this.errorMessage = <any>error);\n  // }\n  batchSelect(batchSelId : number){\n    alert(\"you have selected BatchId: \" + batchSelId);\n    this.batchSelectedId = batchSelId\n  }\n  enrollMe(){\n    console.log(this.detailStudent.id + \" Inside postStudentBatch \" + this.batchSelectedId)\n    this._studentService.postStudentBatch(this.batchSelectedId, this.detailStudent.id)\n        .subscribe((data: any) => {\n          console.log(\"data here is : \" + data.success),\n            error => this.errorMessage = <any>error;\n          if (!data.success) {\n            this.errorMessage = \"Sorry could not add your item\";\n            throw new Error(\"Sorry could not add your item\");\n          }\n        })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/student/student.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/subject/subject.component.css\n// module id = ./src/app/subject/subject.component.css\n// module chunks = main","module.exports = \"<p>\\n  subject worksssssssss!\\n</p>\\n<div class=\\\"container\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let subject of subjects\\\">\\n      subject: {{subject.name}}\\n    </li>\\n  </ul>\\n</div>\\n--------------------------------------------------------------------------\\n<div class=\\\"container\\\">\\n  <form>\\n    <div>\\n      <label for=\\\"name\\\">Add New Subject Name</label>\\n      <input name=\\\"name\\\" type=\\\"text\\\" #inp1 class=\\\"form-control\\\">\\n    </div>\\n    <button type=\\\"submit\\\" (click)=\\\"onSubmit(inp1.value)\\\" class=\\\"btn btn-default\\\">Submit</button>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/subject/subject.component.html\n// module id = ./src/app/subject/subject.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ISubject } from './subject';\nimport { SubjectService } from '../DAL/subject.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent implements OnInit {\n  subjects: ISubject[] = [];\n  errorMessage: string\n  constructor(private _subjectService: SubjectService) { }\n\n  ngOnInit(): void {\n    console.log(\"i am here\")\n    this._subjectService.getSubjects()\n      .subscribe(subjects => this.subjects = subjects,\n        error => this.errorMessage = <any>error);\n  }\n  onSubmit(a: string) {\n    // console.log(\"newCourseName \" + a );\n\n    if (!isNullOrUndefined(a)) {\n      this._subjectService.postSubject(a)\n        .subscribe((data: any) => {\n          console.log(\"data here is : \" + data.success),\n            error => this.errorMessage = <any>error;\n          if (!data.success) {\n            this.errorMessage = \"Sorry could not add your item\";\n            throw new Error(\"Sorry could not add your item\");\n          }\n        })\n    }\n    else {\n      console.log(\"found an error\");\n      throw new Error(\"Cant be empty\");\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/subject/subject.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/teacher/teacher.component.css\n// module id = ./src/app/teacher/teacher.component.css\n// module chunks = main","module.exports = \"<p>\\n  teacher workssssssss!\\n</p>\\n<div class=\\\"container\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let teacher of teachers\\\">\\n      teacher: {{teacher.name}}\\n    </li>\\n  </ul>\\n</div>\\n\\n-------------------------------------------------------------\\n<div class=\\\"container\\\">\\n  <form>\\n    <div>\\n      <label for=\\\"name\\\">Add New Teacher Name</label>\\n      <input name=\\\"name\\\" type=\\\"text\\\" #inp1 class=\\\"form-control\\\">\\n    </div>\\n    <button type=\\\"submit\\\" (click)=\\\"onSubmit(inp1.value)\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/teacher/teacher.component.html\n// module id = ./src/app/teacher/teacher.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ITeacher } from './teacher';\nimport { TeacherService } from '../DAL/teacher.service';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n  selector: 'app-teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.css']\n})\nexport class TeacherComponent implements OnInit {\n  teachers : ITeacher[] = [];\n  errorMessage : string\n  constructor(private _teacherService : TeacherService) { }\n  \n  ngOnInit() : void{\n    console.log(\"i am here\")\n    this._teacherService.getTeachers()\n      .subscribe(teachers => this.teachers = teachers,\n        error => this.errorMessage = <any>error);\n  }\n  onSubmit(a: string) {\n    // console.log(\"newCourseName \" + a );\n\n    if (!isNullOrUndefined(a)) {\n      this._teacherService.postTeacher(a)\n        .subscribe((data: any) => {\n          console.log(\"data here is : \" + data.success),\n            error => this.errorMessage = <any>error;\n          if (!data.success) {\n            this.errorMessage = \"Sorry could not add your item\";\n            throw new Error(\"Sorry could not add your item\");\n          }\n        })\n    }\n    else {\n      console.log(\"found an error\");\n      throw new Error(\"Can't be empty\");\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/teacher/teacher.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}